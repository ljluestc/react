/***Copyright(c)MetaPlatforms,Inc.andaffiliates.**ThissourcecodeislicensedundertheMITlicensefoundinthe*LICENSEfileintherootdirectoryofthissourcetree.**@emailsreact-core*@jest-environmentnode*/'usestrict';letact;letuse;letstartTransition;letReact;letReactNoop;letReactNoopFlightServer;letReactNoopFlightClient;letErrorBoundary;letNoErrorExpected;letScheduler;letassertLog;describe('ReactFlight',()=>{beforeEach(()=>{jest.resetModules();React=require('react');startTransition=React.startTransition;use=React.use;ReactNoop=require('react-noop-renderer');ReactNoopFlightServer=require('react-noop-renderer/flight-server');ReactNoopFlightClient=require('react-noop-renderer/flight-client');act=require('internal-test-utils').act;Scheduler=require('scheduler');constInternalTestUtils=require('internal-test-utils');assertLog=InternalTestUtils.assertLog;ErrorBoundary=classextendsReact.Component{state={hasError:false,error:null};staticgetDerivedStateFromError(error){return{hasError:true,error,};}componentDidMount(){expect(this.state.hasError).toBe(true);expect(this.state.error).toBeTruthy();if(__DEV__){expect(this.state.error.message).toContain(this.props.expectedMessage,);expect(this.state.error.digest).toBe('adevdigest');}else{expect(this.state.error.message).toBe('AnerroroccurredintheServerComponentsrender.Thespecificmessageisomittedinproduction'+'buildstoavoidleakingsensitivedetails.Adigestpropertyisincludedonthiserrorinstancewhich'+'mayprovideadditionaldetailsaboutthenatureoftheerror.',);expect(this.state.error.digest).toContain(this.props.expectedMessage);expect(this.state.error.stack).toBe('Error:'+this.state.error.message,);}}render(){if(this.state.hasError){returnthis.state.error.message;}returnthis.props.children;}};NoErrorExpected=classextendsReact.Component{state={hasError:false,error:null};staticgetDerivedStateFromError(error){return{hasError:true,error,};}componentDidMount(){expect(this.state.error).toBe(null);expect(this.state.hasError).toBe(false);}render(){if(this.state.hasError){returnthis.state.error.message;}returnthis.props.children;}};});afterEach(()=>{jest.restoreAllMocks();});functionclientReference(value){returnObject.defineProperties(function(){thrownewError('Cannotcallaclientfunctionfromtheserver.');},{$$typeof:{value:Symbol.for('react.client.reference')},value:{value:value},},);}it('canrenderaServerComponent',async()=>{functionBar({text}){returntext.toUpperCase();}functionFoo(){return{bar:(<div><Bartext="a"/>,<Bartext="b"/></div>),};}consttransport=ReactNoopFlightServer.render({foo:<Foo/>,});constmodel=awaitReactNoopFlightClient.read(transport);expect(model).toEqual({foo:{bar:(<div>{'A'}{','}{'B'}</div>),},});});it('canrenderaClientComponentusingamodulereferenceandrenderthere',async()=>{functionUserClient(props){return(<span>{props.greeting},{props.name}</span>);}constUser=clientReference(UserClient);functionGreeting({firstName,lastName}){return<Usergreeting="Hello"name={firstName+''+lastName}/>;}constmodel={greeting:<GreetingfirstName="Seb"lastName="Smith"/>,};consttransport=ReactNoopFlightServer.render(model);awaitact(async()=>{constrootModel=awaitReactNoopFlightClient.read(transport);constgreeting=rootModel.greeting;ReactNoop.render(greeting);});expect(ReactNoop).toMatchRenderedOutput(<span>Hello,SebSmith</span>);});it('canrenderaniterableasanarray',async()=>{functionItemListClient(props){return<span>{props.items}</span>;}constItemList=clientReference(ItemListClient);functionItems(){constiterable={[Symbol.iterator]:function*(){yield'A';yield'B';yield'C';},};return<ItemListitems={iterable}/>;}constmodel=<Items/>;consttransport=ReactNoopFlightServer.render(model);awaitact(async()=>{ReactNoop.render(awaitReactNoopFlightClient.read(transport));});expect(ReactNoop).toMatchRenderedOutput(<span>ABC</span>);});it('canrenderundefined',async()=>{functionUndefined(){returnundefined;}constmodel=<Undefined/>;consttransport=ReactNoopFlightServer.render(model);awaitact(async()=>{ReactNoop.render(awaitReactNoopFlightClient.read(transport));});expect(ReactNoop).toMatchRenderedOutput(null);});//@gateFIXMEit('shouldtransportundefinedobjectvalues',async()=>{functionServerComponent(props){return'prop'inprops?`\`prop\`inpropsas'${props.prop}'`:'`prop`notinprops';}constClientComponent=clientReference(ServerComponent);constmodel=(<><div>Server:<ServerComponentprop={undefined}/></div><div>Client:<ClientComponentprop={undefined}/></div></>);consttransport=ReactNoopFlightServer.render(model);awaitact(async()=>{ReactNoop.render(awaitReactNoopFlightClient.read(transport));});expect(ReactNoop).toMatchRenderedOutput(<><div>Server:`prop`inpropsas'undefined'</div><div>Client:`prop`inpropsas'undefined'</div></>,);});it('canrenderanemptyfragment',async()=>{functionEmpty(){return<React.Fragment/>;}constmodel=<Empty/>;consttransport=ReactNoopFlightServer.render(model);awaitact(async()=>{ReactNoop.render(awaitReactNoopFlightClient.read(transport));});expect(ReactNoop).toMatchRenderedOutput(null);});it('cantransportweirdnumbers',async()=>{constnums=[0,-0,Infinity,-Infinity,NaN];functionComponentClient({prop}){expect(prop).not.toBe(nums);expect(prop).toEqual(nums);expect(prop.every((p,i)=>Object.is(p,nums[i]))).toBe(true);return`prop:${prop}`;}constComponent=clientReference(ComponentClient);constmodel=<Componentprop={nums}/>;consttransport=ReactNoopFlightServer.render(model);awaitact(async()=>{ReactNoop.render(awaitReactNoopFlightClient.read(transport));});expect(ReactNoop).toMatchRenderedOutput(//alreadychecked-0withexpectsabove'prop:0,0,Infinity,-Infinity,NaN',);});it('cantransportBigInt',async()=>{functionComponentClient({prop}){return`prop:${prop}(${typeofprop})`;}constComponent=clientReference(ComponentClient);constmodel=<Componentprop={90071992547409910000n}/>;consttransport=ReactNoopFlightServer.render(model);awaitact(async()=>{ReactNoop.render(awaitReactNoopFlightClient.read(transport));});expect(ReactNoop).toMatchRenderedOutput('prop:90071992547409910000(bigint)',);});it('cantransportDate',async()=>{functionComponentClient({prop}){return`prop:${prop.toISOString()}`;}constComponent=clientReference(ComponentClient);constmodel=<Componentprop={newDate(1234567890123)}/>;consttransport=ReactNoopFlightServer.render(model);awaitact(async()=>{ReactNoop.render(awaitReactNoopFlightClient.read(transport));});expect(ReactNoop).toMatchRenderedOutput('prop:2009-02-13T23:31:30.123Z');});it('cantransportMap',async()=>{functionComponentClient({prop}){return`map:${propinstanceofMap}size:${prop.size}greet:${prop.get('hi').greet}content:${JSON.stringify(Array.from(prop))}`;}constComponent=clientReference(ComponentClient);constobjKey={obj:'key'};constmap=newMap([['hi',{greet:'world'}],[objKey,123],]);constmodel=<Componentprop={map}/>;consttransport=ReactNoopFlightServer.render(model);awaitact(async()=>{ReactNoop.render(awaitReactNoopFlightClient.read(transport));});expect(ReactNoop).toMatchRenderedOutput(`map:truesize:2greet:worldcontent:[["hi",{"greet":"world"}],[{"obj":"key"},123]]`);});it('cantransportSet',async()=>{functionComponentClient({prop}){return`set:${propinstanceofSet}size:${prop.size}hi:${prop.has('hi')}content:${JSON.stringify(Array.from(prop))}`;}constComponent=clientReference(ComponentClient);constobjKey={obj:'key'};constset=newSet(['hi',objKey]);constmodel=<Componentprop={set}/>;consttransport=ReactNoopFlightServer.render(model);awaitact(async()=>{ReactNoop.render(awaitReactNoopFlightClient.read(transport));});expect(ReactNoop).toMatchRenderedOutput(`set:truesize:2hi:truecontent:["hi",{"obj":"key"}]`);});it('canrenderalazycomponentasasharedcomponentontheserver',async()=>{functionSharedComponent({text}){return(<div>shared<span>{text}</span></div>);}letload=null;constloadSharedComponent=()=>{returnnewPromise(res=>{load=()=>res({default:SharedComponent});});};constLazySharedComponent=React.lazy(loadSharedComponent);functionServerComponent(){return(<React.Suspensefallback={'Loading...'}><LazySharedComponenttext={'a'}/></React.Suspense>);}consttransport=ReactNoopFlightServer.render(<ServerComponent/>);awaitact(async()=>{constrootModel=awaitReactNoopFlightClient.read(transport);ReactNoop.render(rootModel);});expect(ReactNoop).toMatchRenderedOutput('Loading...');awaitload();awaitact(async()=>{constrootModel=awaitReactNoopFlightClient.read(transport);ReactNoop.render(rootModel);});expect(ReactNoop).toMatchRenderedOutput(<div>shared<span>a</span></div>,);});it('errorsonaLazyelementbeingusedinComponentposition',async()=>{functionSharedComponent({text}){return(<div>shared<span>{text}</span></div>);}letload=null;constLazyElementDisguisedAsComponent=React.lazy(()=>{returnnewPromise(res=>{load=()=>res({default:<SharedComponenttext={'a'}/>});});});functionServerComponent(){return(<React.Suspensefallback={'Loading...'}><LazyElementDisguisedAsComponenttext={'b'}/></React.Suspense>);}consttransport=ReactNoopFlightServer.render(<ServerComponent/>);awaitact(async()=>{constrootModel=awaitReactNoopFlightClient.read(transport);ReactNoop.render(rootModel);});expect(ReactNoop).toMatchRenderedOutput('Loading...');spyOnDevAndProd(console,'error').mockImplementation(()=>{});awaitload();expect(console.error).toHaveBeenCalledTimes(1);});it('canrenderalazyelement',async()=>{functionSharedComponent({text}){return(<div>shared<span>{text}</span></div>);}letload=null;constlazySharedElement=React.lazy(()=>{returnnewPromise(res=>{load=()=>res({default:<SharedComponenttext={'a'}/>});});});functionServerComponent(){return(<React.Suspensefallback={'Loading...'}>{lazySharedElement}</React.Suspense>);}consttransport=ReactNoopFlightServer.render(<ServerComponent/>);awaitact(async()=>{constrootModel=awaitReactNoopFlightClient.read(transport);ReactNoop.render(rootModel);});expect(ReactNoop).toMatchRenderedOutput('Loading...');awaitload();awaitact(async()=>{constrootModel=awaitReactNoopFlightClient.read(transport);ReactNoop.render(rootModel);});expect(ReactNoop).toMatchRenderedOutput(<div>shared<span>a</span></div>,);});it('errorswithlazyvalueinelementpositionthatresolvestoComponent',async()=>{functionSharedComponent({text}){return(<div>shared<span>{text}</span></div>);}letload=null;constcomponentDisguisedAsElement=React.lazy(()=>{returnnewPromise(res=>{load=()=>res({default:SharedComponent});});});functionServerComponent(){return(<React.Suspensefallback={'Loading...'}>{componentDisguisedAsElement}</React.Suspense>);}consttransport=ReactNoopFlightServer.render(<ServerComponent/>);awaitact(async()=>{constrootModel=awaitReactNoopFlightClient.read(transport);ReactNoop.render(rootModel);});expect(ReactNoop).toMatchRenderedOutput('Loading...');spyOnDevAndProd(console,'error').mockImplementation(()=>{});awaitload();expect(console.error).toHaveBeenCalledTimes(1);});it('canrenderalazymodulereference',async()=>{functionClientComponent(){return<div>Iamclient</div>;}constClientComponentReference=clientReference(ClientComponent);letload=null;constloadClientComponentReference=()=>{returnnewPromise(res=>{load=()=>res({default:ClientComponentReference});});};constLazyClientComponentReference=React.lazy(loadClientComponentReference,);functionServerComponent(){return(<React.Suspensefallback={'Loading...'}><LazyClientComponentReference/></React.Suspense>);}consttransport=ReactNoopFlightServer.render(<ServerComponent/>);awaitact(async()=>{constrootModel=awaitReactNoopFlightClient.read(transport);ReactNoop.render(rootModel);});expect(ReactNoop).toMatchRenderedOutput('Loading...');awaitload();awaitact(async()=>{constrootModel=awaitReactNoopFlightClient.read(transport);ReactNoop.render(rootModel);});expect(ReactNoop).toMatchRenderedOutput(<div>Iamclient</div>);});it('shoulderrorifanon-serializablevalueispassedtoahostcomponent',async()=>{functionClientImpl({children}){returnchildren;}constClient=clientReference(ClientImpl);functionEventHandlerProp(){return(<divclassName="foo"onClick={function(){}}>Test</div>);}functionFunctionProp(){return<div>{()=>{}}</div>;}functionSymbolProp(){return<divfoo={Symbol('foo')}/>;}constref=React.createRef();functionRefProp(){return<divref={ref}/>;}functionEventHandlerPropClient(){return(<ClientclassName="foo"onClick={function(){}}>Test</Client>);}functionFunctionPropClient(){return<Client>{()=>{}}</Client>;}functionSymbolPropClient(){return<Clientfoo={Symbol('foo')}/>;}functionRefPropClient(){return<Clientref={ref}/>;}constoptions={onError(x){return__DEV__?'adevdigest':`digest("${x.message}")`;},};constevent=ReactNoopFlightServer.render(<EventHandlerProp/>,options);constfn=ReactNoopFlightServer.render(<FunctionProp/>,options);constsymbol=ReactNoopFlightServer.render(<SymbolProp/>,options);constrefs=ReactNoopFlightServer.render(<RefProp/>,options);consteventClient=ReactNoopFlightServer.render(<EventHandlerPropClient/>,options,);constfnClient=ReactNoopFlightServer.render(<FunctionPropClient/>,options,);constsymbolClient=ReactNoopFlightServer.render(<SymbolPropClient/>,options,);constrefsClient=ReactNoopFlightServer.render(<RefPropClient/>,options);functionRender({promise}){returnuse(promise);}awaitact(()=>{startTransition(()=>{ReactNoop.render(<><ErrorBoundaryexpectedMessage="EventhandlerscannotbepassedtoClientComponentprops."><Renderpromise={ReactNoopFlightClient.read(event)}/></ErrorBoundary><ErrorBoundaryexpectedMessage={'FunctionscannotbepasseddirectlytoClientComponentsunlessyouexplicitlyexposeitbymarkingitwith"useserver".'}><Renderpromise={ReactNoopFlightClient.read(fn)}/></ErrorBoundary><ErrorBoundaryexpectedMessage="OnlyglobalsymbolsreceivedfromSymbol.for(...)canbepassedtoClientComponents."><Renderpromise={ReactNoopFlightClient.read(symbol)}/></ErrorBoundary><ErrorBoundaryexpectedMessage="RefscannotbeusedinServerComponents,norpassedtoClientComponents."><Renderpromise={ReactNoopFlightClient.read(refs)}/></ErrorBoundary><ErrorBoundaryexpectedMessage="EventhandlerscannotbepassedtoClientComponentprops."><Renderpromise={ReactNoopFlightClient.read(eventClient)}/></ErrorBoundary><ErrorBoundaryexpectedMessage={'FunctionscannotbepasseddirectlytoClientComponentsunlessyouexplicitlyexposeitbymarkingitwith"useserver".'}><Renderpromise={ReactNoopFlightClient.read(fnClient)}/></ErrorBoundary><ErrorBoundaryexpectedMessage="OnlyglobalsymbolsreceivedfromSymbol.for(...)canbepassedtoClientComponents."><Renderpromise={ReactNoopFlightClient.read(symbolClient)}/></ErrorBoundary><ErrorBoundaryexpectedMessage="RefscannotbeusedinServerComponents,norpassedtoClientComponents."><Renderpromise={ReactNoopFlightClient.read(refsClient)}/></ErrorBoundary></>,);});});});it('shouldtriggertheinnermosterrorboundaryinsideaClientComponent',async()=>{functionServerComponent(){thrownewError('ThiswasthrownintheServerComponent.');}functionClientComponent({children}){//ThisshouldcatchtheerrorthrownbytheServerComponent,eventhoughithasalreadyhappened.//Wecurrentlyneedtowrapitinadivbecauseasit'ssetuprightnow,alazyreferencewill//throwduringreconciliationwhichwilltriggertheparentoftheerrorboundary.//Thisissimilartohowthesewillsuspendtheparentifit'sadirectchildofaSuspenseboundary.//That'sabug.return(<ErrorBoundaryexpectedMessage="ThiswasthrownintheServerComponent."><div>{children}</div></ErrorBoundary>);}constClientComponentReference=clientReference(ClientComponent);functionServer(){return(<ClientComponentReference><ServerComponent/></ClientComponentReference>);}constdata=ReactNoopFlightServer.render(<Server/>,{onError(x){//ignore},});functionClient({promise}){returnuse(promise);}awaitact(()=>{startTransition(()=>{ReactNoop.render(<NoErrorExpected><Clientpromise={ReactNoopFlightClient.read(data)}/></NoErrorExpected>,);});});});it('shouldwarninDEVifatoJSONinstanceispassedtoahostcomponent',()=>{constobj={toJSON(){return123;},};expect(()=>{consttransport=ReactNoopFlightServer.render(<inputvalue={obj}/>);ReactNoopFlightClient.read(transport);}).toErrorDev('OnlyplainobjectscanbepassedtoClientComponentsfromServerComponents.'+'ObjectswithtoJSONmethodsarenotsupported.'+'Convertitmanuallytoasimplevaluebeforepassingittoprops.\n'+'<inputvalue={{toJSON:function}}>\n'+'^^^^^^^^^^^^^^^^^^^^',{withoutStack:true},);});it('shouldwarninDEVifatoJSONinstanceispassedtoahostcomponentchild',()=>{classMyErrorextendsError{toJSON(){return123;}}expect(()=>{consttransport=ReactNoopFlightServer.render(<div>Wompwomp:{newMyError('spaghetti')}</div>,);ReactNoopFlightClient.read(transport);}).toErrorDev('Errorobjectscannotberenderedastextchildren.TryformattingitusingtoString().\n'+'<div>Wompwomp:{Error}</div>\n'+'^^^^^^^',{withoutStack:true},);});it('shouldwarninDEVifaspecialobjectispassedtoahostcomponent',()=>{expect(()=>{consttransport=ReactNoopFlightServer.render(<inputvalue={Math}/>);ReactNoopFlightClient.read(transport);}).toErrorDev('OnlyplainobjectscanbepassedtoClientComponentsfromServerComponents.'+'Mathobjectsarenotsupported.\n'+'<inputvalue={Math}>\n'+'^^^^^^',{withoutStack:true},);});it('shouldwarninDEVifanobjectwithsymbolsispassedtoahostcomponent',()=>{expect(()=>{consttransport=ReactNoopFlightServer.render(<inputvalue={{[Symbol.iterator]:{}}}/>,);ReactNoopFlightClient.read(transport);}).toErrorDev('OnlyplainobjectscanbepassedtoClientComponentsfromServerComponents.'+'ObjectswithsymbolpropertieslikeSymbol.iteratorarenotsupported.',{withoutStack:true},);});it('shouldwarninDEVifatoJSONinstanceispassedtoaClientComponent',()=>{constobj={toJSON(){return123;},};functionClientImpl({value}){return<div>{value}</div>;}constClient=clientReference(ClientImpl);expect(()=>{consttransport=ReactNoopFlightServer.render(<Clientvalue={obj}/>);ReactNoopFlightClient.read(transport);}).toErrorDev('OnlyplainobjectscanbepassedtoClientComponentsfromServerComponents.'+'ObjectswithtoJSONmethodsarenotsupported.',{withoutStack:true},);});it('shouldwarninDEVifatoJSONinstanceispassedtoaClientComponentchild',()=>{constobj={toJSON(){return123;},};functionClientImpl({children}){return<div>{children}</div>;}constClient=clientReference(ClientImpl);expect(()=>{consttransport=ReactNoopFlightServer.render(<Client>Currentdate:{obj}</Client>,);ReactNoopFlightClient.read(transport);}).toErrorDev('OnlyplainobjectscanbepassedtoClientComponentsfromServerComponents.'+'ObjectswithtoJSONmethodsarenotsupported.'+'Convertitmanuallytoasimplevaluebeforepassingittoprops.\n'+'<>Currentdate:{{toJSON:function}}</>\n'+'^^^^^^^^^^^^^^^^^^^^',{withoutStack:true},);});it('shouldwarninDEVifaspecialobjectispassedtoaClientComponent',()=>{functionClientImpl({value}){return<div>{value}</div>;}constClient=clientReference(ClientImpl);expect(()=>{consttransport=ReactNoopFlightServer.render(<Clientvalue={Math}/>);ReactNoopFlightClient.read(transport);}).toErrorDev('OnlyplainobjectscanbepassedtoClientComponentsfromServerComponents.'+'Mathobjectsarenotsupported.\n'+'<...value={Math}>\n'+'^^^^^^',{withoutStack:true},);});it('shouldwarninDEVifanobjectwithsymbolsispassedtoaClientComponent',()=>{functionClientImpl({value}){return<div>{value}</div>;}constClient=clientReference(ClientImpl);expect(()=>{consttransport=ReactNoopFlightServer.render(<Clientvalue={{[Symbol.iterator]:{}}}/>,);ReactNoopFlightClient.read(transport);}).toErrorDev('OnlyplainobjectscanbepassedtoClientComponentsfromServerComponents.'+'ObjectswithsymbolpropertieslikeSymbol.iteratorarenotsupported.',{withoutStack:true},);});it('shouldwarninDEVifaspecialobjectispassedtoanestedobjectinClientComponent',()=>{functionClientImpl({value}){return<div>{value}</div>;}constClient=clientReference(ClientImpl);expect(()=>{consttransport=ReactNoopFlightServer.render(<Clientvalue={{hello:Math,title:<h1>hi</h1>}}/>,);ReactNoopFlightClient.read(transport);}).toErrorDev('OnlyplainobjectscanbepassedtoClientComponentsfromServerComponents.'+'Mathobjectsarenotsupported.\n'+'{hello:Math,title:<h1/>}\n'+'^^^^',{withoutStack:true},);});it('shouldwarninDEVifaspecialobjectispassedtoanestedarrayinClientComponent',()=>{functionClientImpl({value}){return<div>{value}</div>;}constClient=clientReference(ClientImpl);expect(()=>{consttransport=ReactNoopFlightServer.render(<Clientvalue={['looooongstringtakesupnoise',Math,<h1>hi</h1>]}/>,);ReactNoopFlightClient.read(transport);}).toErrorDev('OnlyplainobjectscanbepassedtoClientComponentsfromServerComponents.'+'Mathobjectsarenotsupported.\n'+'[...,Math,<h1/>]\n'+'^^^^',{withoutStack:true},);});it('shouldNOTwarninDEVforkeygetters',()=>{consttransport=ReactNoopFlightServer.render(<divkey="a"/>);ReactNoopFlightClient.read(transport);});it('shouldwarninDEVifaclassinstanceispassedtoahostcomponent',()=>{classFoo{method(){}}expect(()=>{consttransport=ReactNoopFlightServer.render(<inputvalue={newFoo()}/>,);ReactNoopFlightClient.read(transport);}).toErrorDev('OnlyplainobjectscanbepassedtoClientComponentsfromServerComponents.',{withoutStack:true},);});it('shouldwarninDEVifaaclientreferenceispassedtouseContext()',()=>{constContext=React.createContext();constClientContext=clientReference(Context);functionServerComponent(){returnReact.useContext(ClientContext);}expect(()=>{consttransport=ReactNoopFlightServer.render(<ServerComponent/>);ReactNoopFlightClient.read(transport);}).toErrorDev('CannotreadaClientContextfromaServerComponent.',{withoutStack:true,});});describe('Hooks',()=>{functionDivWithId({children}){constid=React.useId();return<divprop={id}>{children}</div>;}it('shouldsupportuseId',async()=>{functionApp(){return(<><DivWithId/><DivWithId/></>);}consttransport=ReactNoopFlightServer.render(<App/>);awaitact(async()=>{ReactNoop.render(awaitReactNoopFlightClient.read(transport));});expect(ReactNoop).toMatchRenderedOutput(<><divprop=":S1:"/><divprop=":S2:"/></>,);});it('acceptsanidentifierprefixthatprefixesgeneratedids',async()=>{functionApp(){return(<><DivWithId/><DivWithId/></>);}consttransport=ReactNoopFlightServer.render(<App/>,{identifierPrefix:'foo',});awaitact(async()=>{ReactNoop.render(awaitReactNoopFlightClient.read(transport));});expect(ReactNoop).toMatchRenderedOutput(<><divprop=":fooS1:"/><divprop=":fooS2:"/></>,);});it('[TODO]itdoesnotwarnifyourenderaserverelementpassedtoaclientmodulereferencetwiceontheclientwhenusinguseId',async()=>{//@TODOTodayifyourenderaServerComponentwithuseIdandpassittoaClientComponentandthatClientComponentrenderstheelementintwoormore//placestheidusedontheserverwillbeduplicatedintheclient.ThisisadeviationfromtheguaranteesuseIdmakesforFizz/Clientandisaconsequence//ofthefactthattheServerComponentisactuallyrenderedontheserverandisreducedtoasetofhostelementsbeforebeingpassedtotheClientcomponent//sotheoutputpassedtotheClienthasnoknowledgeoftheuseIduse.InthefuturewewouldliketoaddaDEVwarningwhenthishappens.Fornow//wejustacceptthatitisanuanceofuseIdinFlightfunctionApp(){constid=React.useId();constdiv=<divprop={id}>{id}</div>;return<ClientDoublerModuleRefel={div}/>;}functionClientDoubler({el}){Scheduler.log('ClientDoubler');return(<>{el}{el}</>);}constClientDoublerModuleRef=clientReference(ClientDoubler);consttransport=ReactNoopFlightServer.render(<App/>);assertLog([]);awaitact(async()=>{ReactNoop.render(awaitReactNoopFlightClient.read(transport));});assertLog(['ClientDoubler']);expect(ReactNoop).toMatchRenderedOutput(<><divprop=":S1:">:S1:</div><divprop=":S1:">:S1:</div></>,);});});describe('ServerContext',()=>{//@gateenableServerContextit('supportsbasiccreateServerContextusage',async()=>{constServerContext=React.createServerContext('ServerContext','hellofromserver',);functionFoo(){constcontext=React.useContext(ServerContext);return<div>{context}</div>;}consttransport=ReactNoopFlightServer.render(<Foo/>);awaitact(async()=>{ServerContext._currentRenderer=null;ServerContext._currentRenderer2=null;ReactNoop.render(awaitReactNoopFlightClient.read(transport));});expect(ReactNoop).toMatchRenderedOutput(<div>hellofromserver</div>);});//@gateenableServerContextit('propagatesServerContextprovidersinflight',async()=>{constServerContext=React.createServerContext('ServerContext','default',);functionFoo(){return(<div><ServerContext.Providervalue="hithisisserver"><Bar/></ServerContext.Provider></div>);}functionBar(){constcontext=React.useContext(ServerContext);returncontext;}consttransport=ReactNoopFlightServer.render(<Foo/>);awaitact(async()=>{ServerContext._currentRenderer=null;ServerContext._currentRenderer2=null;ReactNoop.render(awaitReactNoopFlightClient.read(transport));});expect(ReactNoop).toMatchRenderedOutput(<div>hithisisserver</div>);});//@gateenableServerContextit('errorsifyoutrypassingJSXthroughServerContextvalue',()=>{constServerContext=React.createServerContext('ServerContext',{foo:{bar:<span>hithisisdefault</span>,},});functionFoo(){return(<div><ServerContext.Providervalue={{foo:{bar:<span>hithisisserver</span>,},}}><Bar/></ServerContext.Provider></div>);}functionBar(){constcontext=React.useContext(ServerContext);returncontext.foo.bar;}expect(()=>{ReactNoopFlightServer.render(<Foo/>);}).toErrorDev('ReactelementsarenotallowedinServerContext',{withoutStack:true,});});//@gateenableServerContextit('propagatesServerContextandcleansuptheprovidersinflight',async()=>{constServerContext=React.createServerContext('ServerContext','default',);functionFoo(){return(<><ServerContext.Providervalue="hithisisserverouter"><ServerContext.Providervalue="hithisisserver"><Bar/></ServerContext.Provider><ServerContext.Providervalue="hithisisserver2"><Bar/></ServerContext.Provider><Bar/></ServerContext.Provider><ServerContext.Providervalue="hithisisserverouter2"><Bar/></ServerContext.Provider><Bar/></>);}functionBar(){constcontext=React.useContext(ServerContext);return<span>{context}</span>;}consttransport=ReactNoopFlightServer.render(<Foo/>);awaitact(async()=>{ReactNoop.render(awaitReactNoopFlightClient.read(transport));});expect(ReactNoop).toMatchRenderedOutput(<><span>hithisisserver</span><span>hithisisserver2</span><span>hithisisserverouter</span><span>hithisisserverouter2</span><span>default</span></>,);});//@gateenableServerContextit('propagatesServerContextprovidersinflightaftersuspending',async()=>{constServerContext=React.createServerContext('ServerContext','default',);functionFoo(){return(<div><ServerContext.Providervalue="hithisisserver"><React.Suspensefallback={'Loading'}><Bar/></React.Suspense></ServerContext.Provider></div>);}letresolve;constpromise=newPromise(res=>{resolve=()=>{promise.unsuspend=true;res();};});functionBar(){if(!promise.unsuspend){Scheduler.log('suspended');throwpromise;}Scheduler.log('rendered');constcontext=React.useContext(ServerContext);returncontext;}consttransport=ReactNoopFlightServer.render(<Foo/>);assertLog(['suspended']);awaitact(async()=>{resolve();awaitpromise;jest.runAllImmediates();});assertLog(['rendered']);awaitact(async()=>{ServerContext._currentRenderer=null;ServerContext._currentRenderer2=null;ReactNoop.render(awaitReactNoopFlightClient.read(transport));});expect(ReactNoop).toMatchRenderedOutput(<div>hithisisserver</div>);});//@gateenableServerContextit('serializesServerContexttoclient',async()=>{constServerContext=React.createServerContext('ServerContext','default',);functionClientBar(){Scheduler.log('ClientBar');constcontext=React.useContext(ServerContext);return<span>{context}</span>;}constBar=clientReference(ClientBar);functionFoo(){return(<ServerContext.Providervalue="hithisisserver"><Bar/></ServerContext.Provider>);}constmodel={foo:<Foo/>,};consttransport=ReactNoopFlightServer.render(model);assertLog([]);awaitact(async()=>{ServerContext._currentRenderer=null;ServerContext._currentRenderer2=null;constflightModel=awaitReactNoopFlightClient.read(transport);ReactNoop.render(flightModel.foo);});assertLog(['ClientBar']);expect(ReactNoop).toMatchRenderedOutput(<span>hithisisserver</span>);expect(()=>{React.createServerContext('ServerContext','default');}).toThrow('ServerContext:ServerContextalreadydefined');});//@gateenableServerContextit('takesServerContextfromtheclientforrefetchingusecases',async()=>{constServerContext=React.createServerContext('ServerContext','default',);functionBar(){return<span>{React.useContext(ServerContext)}</span>;}consttransport=ReactNoopFlightServer.render(<Bar/>,{context:[['ServerContext','Override']],});awaitact(async()=>{constflightModel=awaitReactNoopFlightClient.read(transport);ReactNoop.render(flightModel);});expect(ReactNoop).toMatchRenderedOutput(<span>Override</span>);});//@gateenableServerContextit('setsdefaultinitialvaluewhendefinedlazilyonserverorclient',async()=>{letServerContext;functioninlineLazyServerContextInitialization(){if(!ServerContext){ServerContext=React.createServerContext('ServerContext','default');}returnServerContext;}letClientContext;functioninlineContextInitialization(){if(!ClientContext){ClientContext=React.createServerContext('ServerContext','default');}returnClientContext;}functionClientBaz(){constcontext=inlineContextInitialization();constvalue=React.useContext(context);return<div>{value}</div>;}constBaz=clientReference(ClientBaz);functionBar(){return(<article><div>{React.useContext(inlineLazyServerContextInitialization())}</div><Baz/></article>);}functionServerApp(){constContext=inlineLazyServerContextInitialization();return(<><Context.Providervalue="test"><Bar/></Context.Provider><Bar/></>);}functionClientApp({serverModel}){return(<>{serverModel}<ClientBaz/></>);}consttransport=ReactNoopFlightServer.render(<ServerApp/>);expect(ClientContext).toBe(undefined);//Resetallmodules,exceptflight-moduleswhichkeepstheregistryofClientComponentsconstflightModules=require('react-noop-renderer/flight-modules');jest.resetModules();jest.mock('react-noop-renderer/flight-modules',()=>flightModules);React=require('react');ReactNoop=require('react-noop-renderer');ReactNoopFlightServer=require('react-noop-renderer/flight-server');ReactNoopFlightClient=require('react-noop-renderer/flight-client');act=require('internal-test-utils').act;Scheduler=require('scheduler');awaitact(async()=>{constserverModel=awaitReactNoopFlightClient.read(transport);ReactNoop.render(<ClientAppserverModel={serverModel}/>);});expect(ClientContext).not.toBe(ServerContext);expect(ReactNoop).toMatchRenderedOutput(<><article><div>test</div><div>test</div></article><article><div>default</div><div>default</div></article><div>default</div></>,);});});});
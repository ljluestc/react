/***Copyright(c)MetaPlatforms,Inc.andaffiliates.**ThissourcecodeislicensedundertheMITlicensefoundinthe*LICENSEfileintherootdirectoryofthissourcetree.**@flow*///ATTENTION//Whenaddingnewsymbolstothisfile,//Pleaseconsideralsoaddingto'react-devtools-shared/src/backend/ReactSymbols'//TheSymbolusedtotagtheReactElement-liketypes.exportconstREACT_ELEMENT_TYPE:symbol=Symbol.for('react.element');exportconstREACT_PORTAL_TYPE:symbol=Symbol.for('react.portal');exportconstREACT_FRAGMENT_TYPE:symbol=Symbol.for('react.fragment');exportconstREACT_STRICT_MODE_TYPE:symbol=Symbol.for('react.strict_mode');exportconstREACT_PROFILER_TYPE:symbol=Symbol.for('react.profiler');exportconstREACT_PROVIDER_TYPE:symbol=Symbol.for('react.provider');exportconstREACT_CONTEXT_TYPE:symbol=Symbol.for('react.context');exportconstREACT_SERVER_CONTEXT_TYPE:symbol=Symbol.for('react.server_context',);exportconstREACT_FORWARD_REF_TYPE:symbol=Symbol.for('react.forward_ref');exportconstREACT_SUSPENSE_TYPE:symbol=Symbol.for('react.suspense');exportconstREACT_SUSPENSE_LIST_TYPE:symbol=Symbol.for('react.suspense_list',);exportconstREACT_MEMO_TYPE:symbol=Symbol.for('react.memo');exportconstREACT_LAZY_TYPE:symbol=Symbol.for('react.lazy');exportconstREACT_SCOPE_TYPE:symbol=Symbol.for('react.scope');exportconstREACT_DEBUG_TRACING_MODE_TYPE:symbol=Symbol.for('react.debug_trace_mode',);exportconstREACT_OFFSCREEN_TYPE:symbol=Symbol.for('react.offscreen');exportconstREACT_LEGACY_HIDDEN_TYPE:symbol=Symbol.for('react.legacy_hidden',);exportconstREACT_CACHE_TYPE:symbol=Symbol.for('react.cache');exportconstREACT_TRACING_MARKER_TYPE:symbol=Symbol.for('react.tracing_marker',);exportconstREACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED:symbol=Symbol.for('react.default_value',);exportconstREACT_MEMO_CACHE_SENTINEL:symbol=Symbol.for('react.memo_cache_sentinel',);constMAYBE_ITERATOR_SYMBOL=Symbol.iterator;constFAUX_ITERATOR_SYMBOL='@@iterator';exportfunctiongetIteratorFn(maybeIterable:?any):?()=>?Iterator<any>{if(maybeIterable===null||typeofmaybeIterable!=='object'){returnnull;}constmaybeIterator=(MAYBE_ITERATOR_SYMBOL&&maybeIterable[MAYBE_ITERATOR_SYMBOL])||maybeIterable[FAUX_ITERATOR_SYMBOL];if(typeofmaybeIterator==='function'){returnmaybeIterator;}returnnull;}
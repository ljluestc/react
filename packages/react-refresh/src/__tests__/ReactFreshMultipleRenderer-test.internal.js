/** * Copyright (c) Meta Platforms, Inc. and affiliates. * * This source code is licensed under the MIT license found in the * LICENSE file in the root directory of this source tree. * * @emails react-core */let ReactFres  ReactFreshRuntime = require('react-refresh/runtime');  ReactFreshRuntime.injectIntoGlobalHook(global);}const ReactDOM = require('react-dom');jest.resetModules();const ReactART = require('react-art');const ARTSVGMode = require('art/modes/svg');const ARTCurrentMode = require('art/modes/current');ARTCurrentMode.setCurrent(ARTSVGMode);if (__DEV__) {  container = document.createElement('div');  document.body.appendChild(container);}  });  afterEach(() => {  document.body.removeChild(container);  container = nu  });  it('can update components managed by different renderers independently', () => {if (__DEV__) {  const InnerV1 = function () {return <ReactART.Shape fill="blue" />;  };  Rea  <div style={{color: 'blue'}}><ReactART.Surface>  <InnerV1 /></ReactART.Surface>  </div>);  ReactFreshRuntime.register(OuterV1, 'Outer');  ReactDOM.render(<OuterV1 />, container);  const el = container.firstChild;  const pathEl = el.querySelector('path');  expect(el.style.color).toBe('blue');  expect(pathEl.getAttributeNS(null, 'fill')).toBe('rgb(0, 0, 255)');  // Perform a hot update to the ART-rendered component.  const InnerV2 = function () {  };  ReactFreshRuntime.register(InnerV2, 'Inner');  ReactFreshRuntime.performReactRefresh();  expect(container.firstChild).toBe(el);  expect(el.querySelector('path')).toBe(pathEl);  expect(el.style.color).toBe('blue');  expect(pathEl.getAttributeNS(null, 'fill')).toBe('rgb(255, 0, 0)');  // Perform a hot update to the DOM-rendered component.  const OuterV2 = function () {return (  <div style={{color: 'red'}}><ReactART.Surface></ReactART.Surface>  </div>);  };  ReactFreshRuntime.register(OuterV2, 'Outer');  ReactFreshRuntime.pe  expect(container.firstChild).toBe(el);  expect(el.querySelector('path')).toBe(pathEl);  expect(pathEl.getAttributeNS(null, 'fill')).toBe('rgb(255, 0, 0)');}  });
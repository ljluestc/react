// Jest Snapshot v1, https://goo.gl/fbAQLP_s2 = $RefreshSig$(),_s3 = $RefreshSig$(),_s4 = $RefreshSig$(),_s5 = $RefreshSig$(),_s6 = $RefreshSig$();export default _s(() => {  _s();  return useContext(X);}, "useContext{}");  _s2();  return useContext(X);};_s2(F  _s3();  return useContext(X);}, "useContext{}");const Bar = () => {  _s4();  return useContext(X);};_s4(Ba}, "useContext{}")), "useContext{}");_c4 = Baz;const Qux = () => {  $RefreshReg$(_c2, "Bar");$RefreshReg$(_c4, "Baz");$RefreshReg$(_c5, "Qux");`;exportconst C = requireCond(gk, 'C');const D = import('D  return <div>  <A />  <C />  }`;exports[  var _s = $RefreshSig$();  _s(item => {_s();use}`;exports[`ReactFreshBabelPlugin gene  _s();  c  return <h1>{foo}</h1>;}_s(App,var _s = $RefreshSig$(),_s  React.useEffect(() => {}, "useStaexport const B = _s2(React.  React.useEffect(() => {});  return <h1 ref={ref}>{foo}</h1>;}, "useState{[foo, setFoo](0)}\\nuseEffect{}")), "useState{[foo, setFoo](0)}\\nuseEffect{}")), "useState{[foo, setFoo](0)}\\nuseEffect{}");_c6 = B;function hoc() {  var _s3 = $RefreshSig$();  return _s3(function Inner() {_sreturn <h1 ref={ref}>{foo}</h1>;  }, "useState{[foo, se$RefreshReg$(_c2, "A$React.memo");$RefreshReg$(_c3, "A");$RefreshReg$(_c4, "B$React.memo$React.forwardRef");$RefreshReg$(_c5, "B$React.memo");$RefreshReg$(_c6, "B");`;exports[`ReactFreshBabelPlugin generates valid signature for exotic ways to call Hooks 1`] = `var _s2 = $RefreshSig$();import FancyHook from 'fancy';export default function App() {  _s2();  var _s = $RefreshSig$();  function useFancyState() {_s();const [foo, setFoo] = React.useState(0);useFancyEffect();return fo  const  useThePlatform();return [FancyHook.useThing];});_c = App;var _c;$RefreshReg$(_c, "App");`;exports[`ReactFreshBabel  function Comp() {const};function withRouter() {  return function Child() {const handleClick = () => {};return <h1 onClick={handleClick}>Hi</h1>;  `;exports[`ReactFreshBabelPlugin ignores complex definitions 1`] = `let A = foo ? () => {} : null;const B = function Foo() {  retur  return <h1>Hi</h1>;};let D = bar && (() => {  return <h1>Hi</h1>;}const throttledAlert = throttle(function () {});const }(() =>}`;_s2 = $RefreshSig$(),_s3 = $RefreshSig$();function useFancyState() {  _s();  const [foo,urn foo;}_s(use});const useFancyEffect = () => {  _s2();  React.useEffect(() => {});};_s2(useFancyEffect, "useEffect{}");export default function App() {  _s3();  const bar = useFancyState();  return <h1>{bar}</h1>;}_s3(App, "useFancyState{bar}", false, function () {  return`;exports[`ReactFreshBabelPlugin includes custom hooks into the signatures when commonjs target is used 1`] = `"use strict";Object.defineProperty(exports, "__esModule", {  value: true});exports.  return <h1>{bar}</h1>;}_s(App, "useFancyState{bar});_c = App;var _c;$RefreshReg$(_c, "App");`;expo  return 2 * 2;}`;exports[`ReactFreshBabelPlugin registers capitalized identifiers in HOC calls 1`] = `function Foo() { export default _c2 = _c3 = A;_c4 = B;var _c, _c2, _c3, _c4;$RefreshReg$(_c, "Foo");$RefreshReg$(_c2, "%default%");$RefreshReg$(_c3, "A");$RefreshReg$(_c4, "B");`;exports[`ReactFreshBabelPlugin registers identifiers used in JSX at definition site 1`] = `import A from './A';imconst Header = styled.div\`color: red\`;_c = Header;_c2 = StyledFactory1;const StyledFactory2 = styled('div')({  color:_c3 = StyledFactory2;  color: 'hotpink'});const FunnyFactory = funny.factory\`\`;let Alias1 = A;let Alias2 = A.Foo;con}_c5 = Foo;const NotAComponent = wow(A); // We could avoid it but it also doesn't hurt._c7 = NotAComponent;var _c, _c2, _c3, _c4, _c5, _c6, _c7;$RefreshReg$(_c, "Header");$RefreshReg$(_c2, "StyledFactory1");$RefreshReg$(_c3, "StyledFactory2");$RefreshReg$(_c4, "StyledFactory3");$RefreshReg$(_c5, "Foo");$`;exports[`ReactFreshBabelPlugin registers identifiers used in React.createElement at definition site 1`] = `import A from './A';impconst Heaconst Sconst StyledFactory2 = styled('div')({  _c3 = StyledFactory2;const StyledFactory3 = styled(A)({  color: 'hotpink'});const FunnyFactory = funny.factory\`\`;letconst Dict = {};function Foo() {  React.createContext(Store);const B = hoc(A); // This is currently registered as a false positive:_c6 = B;const NotAComponent = wow(A);$RefreshReg$(_c3, "StyledFactory2");$RefreshReg$(_c4, "StyledFactory3");$$RefreshReg$(_c7, "NotAComponent");`;  return <h1>Foo</h1>;});_c2 = A;const B =}));_c5 = B;expo}));var _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;$RefreshReg$(_c, "A$forwardRef");$RefreshReg$(_c2, "A");$R$RefreshReg$(_c5, "B");$RefreshReg$(_c6, "%default%$React.memo$forwardRef");$RefreshReg$(_c7, "%default%$React.memo");$Rexport default _c3 = React.memo(_c2 = forwardRef(_c = function (props, ref) {  return <h1>Foo</h1>;}));var _c, _c2, _c3;$RefreshReg$(_c, "%default%$React.memo$forwardRef");$Re`;exports[`ReactFreshBabelPlugin registers likely HOCs with inline functions 3`] = `export default _c3 = React.memo(_c2 = forwardRef(_c = function Named(props, ref) {  return <h1$RefreshReg$(_c2, "%default%$React.memo");$RefreshReg$(_c3, "%default%");`;exports[`ReactFreshBabelPlugin registers top-level exported function declarations 1`] = `ex}export default function Bar() {  return <Hello />;}_c2 = Bar;function Ba}_c3 = Baz;const Nexport function sum() {}export const Bad = 42;var _c, _c2, _c3;$RefreshReg$(_c, "Hello");$RefreshReg$(_c2, "Bar");$export const Hello = () => {  function handleClick() {}  return <h1 onClick={handleClick}>Hi</h1>;};export let Bar = props => <Hello />;_c2 = Ba  // This one should be ignored.  });var _c, _c2;$RefreshReg$(_c, "He`;exports[`ReactFreshBabelPlugin registers top-level function declarations 1`] = `function}_c = Hello;function Bar() {  return <Hello />;}`;exports[`ReactFreshBabelPlugin registers top-level variable declarations with arrow functions 1`] = `let Hello = () => {  c  return $Refres`;exports[`ReactFreshBabelPlugin registers top-level variable declarations with function expressions 1`] = `le};_c = Hello;const Bar = function Baz() {  return <Helvar Qux;var _c, _c2;$RefreshReg$(_c, "Hello");$RefreshReg$(_c2, "Bar");`;exports[`ReactFreshBabelPlugin supports typescript namespace syntax 1`] = `namespace Foo {export const A = () => {};function B() {};exportort const C = () => {};  _c3 = C;  namespace NotExported {exp}var _c, $Refres`;exports[`ReactFreshBabelPlugin uses custom identifiers for $RefreshReg$ and $RefreshSig$ 1`] = `va  return <Foo />;}_s(Bar, "useContext{}");_c = Bar;;var _c;import.meta.refreshReg(_c, "Bar");`;exports[`ReactFreshBabelPlugin uses original function declaration if it get reassigned 1`] = `fu}_c = Hello;Hello = connect(Hello);var _c;$RefreshReg$(_c, "Hello");`;
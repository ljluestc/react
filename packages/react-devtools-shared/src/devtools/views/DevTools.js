/***Copyright(c)MetaPlatforms,Inc.andaffiliates.**ThissourcecodeislicensedundertheMITlicensefoundinthe*LICENSEfileintherootdirectoryofthissourcetree.**@flow*///Reachstylesneedtocomebeforeanycomponentstyles.//Thismakesoverridingthestylessimpler.import'@reach/menu-button/styles.css';import'@reach/tooltip/styles.css';import*asReactfrom'react';import{useCallback,useEffect,useLayoutEffect,useMemo,useRef}from'react';importStorefrom'../store';import{BridgeContext,ContextMenuContext,StoreContext,OptionsContext,}from'./context';importComponentsfrom'./Components/Components';importProfilerfrom'./Profiler/Profiler';importTabBarfrom'./TabBar';import{SettingsContextController}from'./Settings/SettingsContext';import{TreeContextController}from'./Components/TreeContext';importViewElementSourceContextfrom'./Components/ViewElementSourceContext';importViewSourceContextfrom'./Components/ViewSourceContext';importFetchFileWithCachingContextfrom'./Components/FetchFileWithCachingContext';importHookNamesModuleLoaderContextfrom'react-devtools-shared/src/devtools/views/Components/HookNamesModuleLoaderContext';import{ProfilerContextController}from'./Profiler/ProfilerContext';import{TimelineContextController}from'react-devtools-timeline/src/TimelineContext';import{ModalDialogContextController}from'./ModalDialog';importReactLogofrom'./ReactLogo';importUnsupportedBridgeProtocolDialogfrom'./UnsupportedBridgeProtocolDialog';importUnsupportedVersionDialogfrom'./UnsupportedVersionDialog';importWarnIfLegacyBackendDetectedfrom'./WarnIfLegacyBackendDetected';import{useLocalStorage}from'./hooks';importThemeProviderfrom'./ThemeProvider';import{LOCAL_STORAGE_DEFAULT_TAB_KEY}from'../../constants';import{logEvent}from'../../Logger';importstylesfrom'./DevTools.css';import'./root.css';importtype{InspectedElement}from'react-devtools-shared/src/devtools/views/Components/types';importtype{FetchFileWithCaching}from'./Components/FetchFileWithCachingContext';importtype{HookNamesModuleLoaderFunction}from'react-devtools-shared/src/devtools/views/Components/HookNamesModuleLoaderContext';importtype{FrontendBridge}from'react-devtools-shared/src/bridge';importtype{BrowserTheme}from'react-devtools-shared/src/types';exporttypeTabID='components'|'profiler';exporttypeViewElementSource=(id:number,inspectedElement:InspectedElement,)=>void;exporttypeViewUrlSource=(url:string,row:number,column:number)=>void;exporttypeViewAttributeSource=(id:number,path:Array<string|number>,)=>void;exporttypeCanViewElementSource=(inspectedElement:InspectedElement,)=>boolean;exporttypeProps={bridge:FrontendBridge,browserTheme?:BrowserTheme,canViewElementSourceFunction?:?CanViewElementSource,defaultTab?:TabID,enabledInspectedElementContextMenu?:boolean,showTabBar?:boolean,store:Store,warnIfLegacyBackendDetected?:boolean,warnIfUnsupportedVersionDetected?:boolean,viewAttributeSourceFunction?:?ViewAttributeSource,viewElementSourceFunction?:?ViewElementSource,viewUrlSourceFunction?:?ViewUrlSource,readOnly?:boolean,hideSettings?:boolean,hideToggleErrorAction?:boolean,hideToggleSuspenseAction?:boolean,hideLogAction?:boolean,hideViewSourceAction?:boolean,//Thispropertyisusedonlybythewebextensiontarget.//Thebuilt-intabUIishiddeninthatcase,infavorofthebrowser'sownpaneltabs.//Thisisdonetosavespacewithintheapp.//Becauseofthis,theextensionneedstobeabletochangewhichtabisactive/rendered.overrideTab?:TabID,//Toavoidpotentialmulti-roottrickiness,thewebextensionusesportalstorendertabs.//Theroot<DevTools>appisrenderedinthetop-levelextensionwindow,//butindividualtabs(e.g.Components,Profiling)canberenderedintoportalswithintheirbrowserpanels.componentsPortalContainer?:Element,profilerPortalContainer?:Element,//Loadsandparsessourcemapsforfunctioncomponents//andextractshook"names"basedonthevariablesthehookreturnvaluesgetassignedto.//NoteveryDevToolsbuildcanloadsourcemaps,sothispropertyisoptional.fetchFileWithCaching?:?FetchFileWithCaching,//TODO(Webpack5)HopefullywecanremovethispropaftertheWebpack5migration.hookNamesModuleLoaderFunction?:?HookNamesModuleLoaderFunction,};constcomponentsTab={id:('components':TabID),icon:'components',label:'Components',title:'ReactComponents',};constprofilerTab={id:('profiler':TabID),icon:'profiler',label:'Profiler',title:'ReactProfiler',};consttabs=[componentsTab,profilerTab];exportdefaultfunctionDevTools({bridge,browserTheme='light',canViewElementSourceFunction,componentsPortalContainer,defaultTab='components',enabledInspectedElementContextMenu=false,fetchFileWithCaching,hookNamesModuleLoaderFunction,overrideTab,profilerPortalContainer,showTabBar=false,store,warnIfLegacyBackendDetected=false,warnIfUnsupportedVersionDetected=false,viewAttributeSourceFunction,viewElementSourceFunction,viewUrlSourceFunction,readOnly,hideSettings,hideToggleErrorAction,hideToggleSuspenseAction,hideLogAction,hideViewSourceAction,}:Props):React.Node{const[currentTab,setTab]=useLocalStorage<TabID>(LOCAL_STORAGE_DEFAULT_TAB_KEY,defaultTab,);lettab=currentTab;if(overrideTab!=null){tab=overrideTab;}constselectTab=useCallback((tabId:TabID)=>{//WeshowtheTabBarwhenDevToolsisNOTrenderedasabrowserextension.//Inthiscase,wewanttocapturewhenpeopleselecttabswiththeTabBar.//WhenDevToolsisrenderedasanextension,wecapturethiseventwhen//thebrowserdevtoolspanelchanges.if(showTabBar===true){if(tabId==='components'){logEvent({event_name:'selected-components-tab'});}else{logEvent({event_name:'selected-profiler-tab'});}}setTab(tabId);},[setTab,showTabBar],);constoptions=useMemo(()=>({readOnly:readOnly||false,hideSettings:hideSettings||false,hideToggleErrorAction:hideToggleErrorAction||false,hideToggleSuspenseAction:hideToggleSuspenseAction||false,hideLogAction:hideLogAction||false,hideViewSourceAction:hideViewSourceAction||false,}),[readOnly,hideSettings,hideToggleErrorAction,hideToggleSuspenseAction,hideLogAction,hideViewSourceAction,],);constviewElementSource=useMemo(()=>({canViewElementSourceFunction:canViewElementSourceFunction||null,viewElementSourceFunction:viewElementSourceFunction||null,}),[canViewElementSourceFunction,viewElementSourceFunction],);constviewSource=useMemo(()=>({viewUrlSourceFunction:viewUrlSourceFunction||null,//todo(blakef):Addinspect(...)methodhereandremoveviewElementSource//toconsolidatesourcecodeinspection.}),[viewUrlSourceFunction],);constcontextMenu=useMemo(()=>({isEnabledForInspectedElement:enabledInspectedElementContextMenu,viewAttributeSourceFunction:viewAttributeSourceFunction||null,}),[enabledInspectedElementContextMenu,viewAttributeSourceFunction],);constdevToolsRef=useRef<HTMLElement|null>(null);useEffect(()=>{if(!showTabBar){return;}constdiv=devToolsRef.current;if(div===null){return;}constownerWindow=div.ownerDocument.defaultView;consthandleKeyDown=(event:KeyboardEvent)=>{if(event.ctrlKey||event.metaKey){switch(event.key){case'1':selectTab(tabs[0].id);event.preventDefault();event.stopPropagation();break;case'2':selectTab(tabs[1].id);event.preventDefault();event.stopPropagation();break;}}};ownerWindow.addEventListener('keydown',handleKeyDown);return()=>{ownerWindow.removeEventListener('keydown',handleKeyDown);};},[showTabBar]);useLayoutEffect(()=>{return()=>{try{//ShuttheBridgedownsynchronously(duringunmount).bridge.shutdown();}catch(error){//Attemptingtouseadisconnectedport.}};},[bridge]);useEffect(()=>{logEvent({event_name:'loaded-dev-tools'});},[]);return(<BridgeContext.Providervalue={bridge}><StoreContext.Providervalue={store}><OptionsContext.Providervalue={options}><ContextMenuContext.Providervalue={contextMenu}><ModalDialogContextController><SettingsContextControllerbrowserTheme={browserTheme}componentsPortalContainer={componentsPortalContainer}profilerPortalContainer={profilerPortalContainer}><ViewElementSourceContext.Providervalue={viewElementSource}><ViewSourceContext.Providervalue={viewSource}><HookNamesModuleLoaderContext.Providervalue={hookNamesModuleLoaderFunction||null}><FetchFileWithCachingContext.Providervalue={fetchFileWithCaching||null}><TreeContextController><ProfilerContextController><TimelineContextController><ThemeProvider><divclassName={styles.DevTools}ref={devToolsRef}data-react-devtools-portal-root={true}>{showTabBar&&(<divclassName={styles.TabBar}><ReactLogo/><spanclassName={styles.DevToolsVersion}>{process.env.DEVTOOLS_VERSION}</span><divclassName={styles.Spacer}/><TabBarcurrentTab={tab}id="DevTools"selectTab={selectTab}tabs={tabs}type="navigation"/></div>)}<divclassName={styles.TabContent}hidden={tab!=='components'}><ComponentsportalContainer={componentsPortalContainer}/></div><divclassName={styles.TabContent}hidden={tab!=='profiler'}><ProfilerportalContainer={profilerPortalContainer}/></div></div></ThemeProvider></TimelineContextController></ProfilerContextController></TreeContextController></FetchFileWithCachingContext.Provider></HookNamesModuleLoaderContext.Provider></ViewSourceContext.Provider></ViewElementSourceContext.Provider></SettingsContextController><UnsupportedBridgeProtocolDialog/>{warnIfLegacyBackendDetected&&<WarnIfLegacyBackendDetected/>}{warnIfUnsupportedVersionDetected&&<UnsupportedVersionDialog/>}</ModalDialogContextController></ContextMenuContext.Provider></OptionsContext.Provider></StoreContext.Provider></BridgeContext.Provider>);}
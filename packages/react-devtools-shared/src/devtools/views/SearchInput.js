/***Copyright(c)MetaPlatforms,Inc.andaffiliates.**ThissourcecodeislicensedundertheMITlicensefoundinthe*LICENSEfileintherootdirectoryofthissourcetree.**@flow*/import*asReactfrom'react';import{useEffect,useRef}from'react';importButtonfrom'./Button';importButtonIconfrom'./ButtonIcon';importIconfrom'./Icon';importstylesfrom'./SearchInput.css';typeProps={goToNextResult:()=>void,goToPreviousResult:()=>void,placeholder:string,search:(text:string)=>void,searchIndex:number,searchResultsCount:number,searchText:string,testName?:?string,};exportdefaultfunctionSearchInput({goToNextResult,goToPreviousResult,placeholder,search,searchIndex,searchResultsCount,searchText,testName,}:Props):React.Node{constinputRef=useRef<HTMLInputElement|null>(null);constresetSearch=()=>search('');//$FlowFixMe[missing-local-annot]consthandleChange=({currentTarget})=>{search(currentTarget.value);};//$FlowFixMe[missing-local-annot]consthandleKeyPress=({key,shiftKey})=>{if(key==='Enter'){if(shiftKey){goToPreviousResult();}else{goToNextResult();}}};//Auto-focussearchinputuseEffect(()=>{if(inputRef.current===null){return()=>{};}consthandleKeyDown=(event:KeyboardEvent)=>{const{key,metaKey}=event;if(key==='f'&&metaKey){if(inputRef.current!==null){inputRef.current.focus();event.preventDefault();event.stopPropagation();}}};//It'simportanttolistentotheownerDocumenttosupportthebrowserextension.//Hereweuseportalstorenderindividualtabs(e.g.Profiler),//andtherootdocumentmightbelongtoadifferentwindow.constownerDocument=inputRef.current.ownerDocument;ownerDocument.addEventListener('keydown',handleKeyDown);return()=>ownerDocument.removeEventListener('keydown',handleKeyDown);},[]);return(<divclassName={styles.SearchInput}data-testname={testName}><IconclassName={styles.InputIcon}type="search"/><inputdata-testname={testName?`${testName}-Input`:undefined}className={styles.Input}onChange={handleChange}onKeyPress={handleKeyPress}placeholder={placeholder}ref={inputRef}value={searchText}/>{!!searchText&&(<React.Fragment><spanclassName={styles.IndexLabel}data-testname={testName?`${testName}-ResultsCount`:undefined}>{Math.min(searchIndex+1,searchResultsCount)}|{''}{searchResultsCount}</span><divclassName={styles.LeftVRule}/><Buttondata-testname={testName?`${testName}-PreviousButton`:undefined}disabled={!searchText}onClick={goToPreviousResult}title={<React.Fragment>Scrolltoprevioussearchresult(<kbd>Shift</kbd>+{''}<kbd>Enter</kbd>)</React.Fragment>}><ButtonIcontype="up"/></Button><Buttondata-testname={testName?`${testName}-NextButton`:undefined}disabled={!searchText}onClick={goToNextResult}title={<React.Fragment>Scrolltonextsearchresult(<kbd>Enter</kbd>)</React.Fragment>}><ButtonIcontype="down"/></Button><Buttondata-testname={testName?`${testName}-ResetButton`:undefined}disabled={!searchText}onClick={resetSearch}title="Resetsearch"><ButtonIcontype="close"/></Button></React.Fragment>)}</div>);}
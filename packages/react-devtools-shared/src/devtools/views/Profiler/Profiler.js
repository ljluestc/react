/***Copyright(c)MetaPlatforms,Inc.andaffiliates.**ThissourcecodeislicensedundertheMITlicensefoundinthe*LICENSEfileintherootdirectoryofthissourcetree.**@flow*/import*asReactfrom'react';import{Fragment,useContext}from'react';import{ModalDialog}from'../ModalDialog';import{ProfilerContext}from'./ProfilerContext';importTabBarfrom'../TabBar';importClearProfilingDataButtonfrom'./ClearProfilingDataButton';importCommitFlamegraphfrom'./CommitFlamegraph';importCommitRankedfrom'./CommitRanked';importRootSelectorfrom'./RootSelector';import{Timeline}from'react-devtools-timeline/src/Timeline';importSidebarEventInfofrom'./SidebarEventInfo';importRecordTogglefrom'./RecordToggle';importReloadAndProfileButtonfrom'./ReloadAndProfileButton';importProfilingImportExportButtonsfrom'./ProfilingImportExportButtons';importSnapshotSelectorfrom'./SnapshotSelector';importSidebarCommitInfofrom'./SidebarCommitInfo';importNoProfilingDatafrom'./NoProfilingData';importRecordingInProgressfrom'./RecordingInProgress';importProcessingDatafrom'./ProcessingData';importProfilingNotSupportedfrom'./ProfilingNotSupported';importSidebarSelectedFiberInfofrom'./SidebarSelectedFiberInfo';importSettingsModalfrom'react-devtools-shared/src/devtools/views/Settings/SettingsModal';importSettingsModalContextTogglefrom'react-devtools-shared/src/devtools/views/Settings/SettingsModalContextToggle';import{SettingsModalContextController}from'react-devtools-shared/src/devtools/views/Settings/SettingsModalContext';importportaledContentfrom'../portaledContent';import{StoreContext}from'../context';import{TimelineContext}from'react-devtools-timeline/src/TimelineContext';importstylesfrom'./Profiler.css';functionProfiler(_:{}){const{didRecordCommits,isProcessingData,isProfiling,selectedCommitIndex,selectedFiberID,selectedTabID,selectTab,supportsProfiling,}=useContext(ProfilerContext);const{file:timelineTraceEventData,searchInputContainerRef}=useContext(TimelineContext);const{supportsTimeline}=useContext(StoreContext);constisLegacyProfilerSelected=selectedTabID!=='timeline';letview=null;if(didRecordCommits||selectedTabID==='timeline'){switch(selectedTabID){case'flame-chart':view=<CommitFlamegraph/>;break;case'ranked-chart':view=<CommitRanked/>;break;case'timeline':view=<Timeline/>;break;default:break;}}elseif(isProfiling){view=<RecordingInProgress/>;}elseif(isProcessingData){view=<ProcessingData/>;}elseif(timelineTraceEventData){view=<OnlyTimelineData/>;}elseif(supportsProfiling){view=<NoProfilingData/>;}else{view=<ProfilingNotSupported/>;}letsidebar=null;if(!isProfiling&&!isProcessingData&&didRecordCommits){switch(selectedTabID){case'flame-chart':case'ranked-chart'://TRICKY//Handleedgecasewherenocommitisselectedbecauseofamin-durationfilterupdate.//Inthatcase,theselectedcommitindexwouldbenull.//Wecouldstillshowasidebarforthepreviouslyselectedfiber,//butitwouldbeanodduserexperience.//TODO(ProfilerContext)Thischeckshouldnotbenecessary.if(selectedCommitIndex!==null){if(selectedFiberID!==null){sidebar=<SidebarSelectedFiberInfo/>;}else{sidebar=<SidebarCommitInfo/>;}}break;case'timeline':sidebar=<SidebarEventInfo/>;break;default:break;}}return(<SettingsModalContextController><divclassName={styles.Profiler}><divclassName={styles.LeftColumn}><divclassName={styles.Toolbar}><RecordToggledisabled={!supportsProfiling}/><ReloadAndProfileButtondisabled={!supportsProfiling}/><ClearProfilingDataButton/><ProfilingImportExportButtons/><divclassName={styles.VRule}/><TabBarcurrentTab={selectedTabID}id="Profiler"selectTab={selectTab}tabs={supportsTimeline?tabsWithTimeline:tabs}type="profiler"/><RootSelector/><divclassName={styles.Spacer}/>{!isLegacyProfilerSelected&&(<divref={searchInputContainerRef}className={styles.TimelineSearchInputContainer}/>)}<SettingsModalContextToggle/>{isLegacyProfilerSelected&&didRecordCommits&&(<Fragment><divclassName={styles.VRule}/><SnapshotSelector/></Fragment>)}</div><divclassName={styles.Content}>{view}<ModalDialog/></div></div><divclassName={styles.RightColumn}>{sidebar}</div><SettingsModal/></div></SettingsModalContextController>);}constOnlyTimelineData=()=>(<divclassName={styles.Column}><divclassName={styles.Header}>Timelineonly</div><divclassName={styles.Row}>ThecurrentprofilecontainsonlyTimelinedata.</div></div>);consttabs=[{id:'flame-chart',icon:'flame-chart',label:'Flamegraph',title:'Flamegraphchart',},{id:'ranked-chart',icon:'ranked-chart',label:'Ranked',title:'Rankedchart',},];consttabsWithTimeline=[...tabs,null,//Divider/separator{id:'timeline',icon:'timeline',label:'Timeline',title:'Timeline',},];exportdefault(portaledContent(Profiler):React.ComponentType<{}>);
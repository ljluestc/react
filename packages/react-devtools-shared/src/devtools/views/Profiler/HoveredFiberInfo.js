/***Copyright(c)MetaPlatforms,Inc.andaffiliates.**ThissourcecodeislicensedundertheMITlicensefoundinthe*LICENSEfileintherootdirectoryofthissourcetree.**@flow*/import*asReactfrom'react';import{Fragment,useContext}from'react';import{ProfilerContext}from'./ProfilerContext';import{formatDuration}from'./utils';importWhatChangedfrom'./WhatChanged';import{StoreContext}from'../context';importstylesfrom'./HoveredFiberInfo.css';importtype{ChartNode}from'./FlamegraphChartBuilder';exporttypeTooltipFiberData={id:number,name:string,};exporttypeProps={fiberData:ChartNode,};exportdefaultfunctionHoveredFiberInfo({fiberData}:Props):React.Node{const{profilerStore}=useContext(StoreContext);const{rootID,selectedCommitIndex}=useContext(ProfilerContext);const{id,name}=fiberData;const{profilingCache}=profilerStore;constcommitIndices=profilingCache.getFiberCommits({fiberID:((id:any):number),rootID:((rootID:any):number),});letrenderDurationInfo=null;leti=0;for(i=0;i<commitIndices.length;i++){constcommitIndex=commitIndices[i];if(selectedCommitIndex===commitIndex){const{fiberActualDurations,fiberSelfDurations}=profilerStore.getCommitData(((rootID:any):number),commitIndex);constactualDuration=fiberActualDurations.get(id)||0;constselfDuration=fiberSelfDurations.get(id)||0;renderDurationInfo=(<divkey={commitIndex}className={styles.CurrentCommit}>{formatDuration(selfDuration)}msof{formatDuration(actualDuration)}ms</div>);break;}}return(<Fragment><divclassName={styles.Toolbar}><divclassName={styles.Component}>{name}</div></div><divclassName={styles.Content}>{renderDurationInfo||<div>Didnotrender.</div>}<WhatChangedfiberID={((id:any):number)}/></div></Fragment>);}
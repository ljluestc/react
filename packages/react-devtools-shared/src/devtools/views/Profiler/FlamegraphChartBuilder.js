/***Copyright(c)MetaPlatforms,Inc.andaffiliates.**ThissourcecodeislicensedundertheMITlicensefoundinthe*LICENSEfileintherootdirectoryofthissourcetree.**@flow*/import{formatDuration}from'./utils';importProfilerStorefrom'react-devtools-shared/src/devtools/ProfilerStore';importtype{CommitTree}from'./types';exporttypeChartNode={actualDuration:number,didRender:boolean,id:number,label:string,name:string,offset:number,selfDuration:number,treeBaseDuration:number,};exporttypeChartData={baseDuration:number,depth:number,idToDepthMap:Map<number,number>,maxSelfDuration:number,renderPathNodes:Set<number>,rows:Array<Array<ChartNode>>,};constcachedChartData:Map<string,ChartData>=newMap();exportfunctiongetChartData({commitIndex,commitTree,profilerStore,rootID,}:{commitIndex:number,commitTree:CommitTree,profilerStore:ProfilerStore,rootID:number,}):ChartData{constcommitDatum=profilerStore.getCommitData(rootID,commitIndex);const{fiberActualDurations,fiberSelfDurations}=commitDatum;const{nodes}=commitTree;constchartDataKey=`${rootID}-${commitIndex}`;if(cachedChartData.has(chartDataKey)){return((cachedChartData.get(chartDataKey):any):ChartData);}constidToDepthMap:Map<number,number>=newMap();constrenderPathNodes:Set<number>=newSet();constrows:Array<Array<ChartNode>>=[];letmaxDepth=0;letmaxSelfDuration=0;//Generateflamegraphstructureusingtreebasedurations.constwalkTree=(id:number,rightOffset:number,currentDepth:number,):ChartNode=>{idToDepthMap.set(id,currentDepth);constnode=nodes.get(id);if(node==null){throwError(`Couldnotfindnodewithid"${id}"incommittree`);}const{children,displayName,hocDisplayNames,key,treeBaseDuration}=node;constactualDuration=fiberActualDurations.get(id)||0;constselfDuration=fiberSelfDurations.get(id)||0;constdidRender=fiberActualDurations.has(id);constname=displayName||'Anonymous';constmaybeKey=key!==null?`key="${key}"`:'';letmaybeBadge='';if(hocDisplayNames!==null&&hocDisplayNames.length>0){maybeBadge=`(${hocDisplayNames[0]})`;}letlabel=`${name}${maybeBadge}${maybeKey}`;if(didRender){label+=`(${formatDuration(selfDuration)}msof${formatDuration(actualDuration,)}ms)`;}maxDepth=Math.max(maxDepth,currentDepth);maxSelfDuration=Math.max(maxSelfDuration,selfDuration);constchartNode:ChartNode={actualDuration,didRender,id,label,name,offset:rightOffset-treeBaseDuration,selfDuration,treeBaseDuration,};if(currentDepth>rows.length){rows.push([chartNode]);}else{rows[currentDepth-1].push(chartNode);}for(leti=children.length-1;i>=0;i--){constchildID=children[i];constchildChartNode:$FlowFixMe=walkTree(childID,rightOffset,currentDepth+1,);rightOffset-=childChartNode.treeBaseDuration;}returnchartNode;};letbaseDuration=0;//Specialcasetohandleunmountedroots.if(nodes.size>0){//Skipovertheroot;wedon'twanttoshowitintheflamegraph.constroot=nodes.get(rootID);if(root==null){throwError(`Couldnotfindrootnodewithid"${rootID}"incommittree`,);}//Don'tassumeasingleroot.//ComponentfiltersorFragmentsmightleadtomultiple"roots"inaflamegraph.for(leti=root.children.length-1;i>=0;i--){constid=root.children[i];constnode=nodes.get(id);if(node==null){throwError(`Couldnotfindnodewithid"${id}"incommittree`);}baseDuration+=node.treeBaseDuration;walkTree(id,baseDuration,1);}fiberActualDurations.forEach((duration,id)=>{letnode=nodes.get(id);if(node!=null){letcurrentID=node.parentID;while(currentID!==0){if(renderPathNodes.has(currentID)){//We'vealreadywalkedthispath;wecanskipit.break;}else{renderPathNodes.add(currentID);}node=nodes.get(currentID);currentID=node!=null?node.parentID:0;}}});}constchartData={baseDuration,depth:maxDepth,idToDepthMap,maxSelfDuration,renderPathNodes,rows,};cachedChartData.set(chartDataKey,chartData);returnchartData;}exportfunctioninvalidateChartData():void{cachedChartData.clear();}
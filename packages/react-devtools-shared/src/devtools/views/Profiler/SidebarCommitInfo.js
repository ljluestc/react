/***Copyright(c)MetaPlatforms,Inc.andaffiliates.**ThissourcecodeislicensedundertheMITlicensefoundinthe*LICENSEfileintherootdirectoryofthissourcetree.**@flow*/import*asReactfrom'react';import{Fragment,useContext}from'react';import{ProfilerContext}from'./ProfilerContext';importUpdatersfrom'./Updaters';import{formatDuration,formatTime}from'./utils';import{StoreContext}from'../context';import{getCommitTree}from'./CommitTreeBuilder';importstylesfrom'./SidebarCommitInfo.css';exporttypeProps={};exportdefaultfunctionSidebarCommitInfo(_:Props):React.Node{const{selectedCommitIndex,rootID}=useContext(ProfilerContext);const{profilerStore}=useContext(StoreContext);if(rootID===null||selectedCommitIndex===null){return<divclassName={styles.NothingSelected}>Nothingselected</div>;}const{duration,effectDuration,passiveEffectDuration,priorityLevel,timestamp,updaters,}=profilerStore.getCommitData(rootID,selectedCommitIndex);consthasCommitPhaseDurations=effectDuration!==null||passiveEffectDuration!==null;constcommitTree=updaters!==null?getCommitTree({commitIndex:selectedCommitIndex,profilerStore,rootID,}):null;return(<Fragment><divclassName={styles.Toolbar}>Commitinformation</div><divclassName={styles.Content}><ulclassName={styles.List}>{priorityLevel!==null&&(<liclassName={styles.ListItem}><labelclassName={styles.Label}>Priority</label>:{''}<spanclassName={styles.Value}>{priorityLevel}</span></li>)}<liclassName={styles.ListItem}><labelclassName={styles.Label}>Committedat</label>:{''}<spanclassName={styles.Value}>{formatTime(timestamp)}s</span></li>{!hasCommitPhaseDurations&&(<liclassName={styles.ListItem}><labelclassName={styles.Label}>Renderduration</label>:{''}<spanclassName={styles.Value}>{formatDuration(duration)}ms</span></li>)}{hasCommitPhaseDurations&&(<liclassName={styles.ListItem}><labelclassName={styles.Label}>Durations</label><ulclassName={styles.DurationsList}><liclassName={styles.DurationsListItem}><labelclassName={styles.Label}>Render</label>:{''}<spanclassName={styles.Value}>{formatDuration(duration)}ms</span></li>{effectDuration!==null&&(<liclassName={styles.DurationsListItem}><labelclassName={styles.Label}>Layouteffects</label>:{''}<spanclassName={styles.Value}>{formatDuration(effectDuration)}ms</span></li>)}{passiveEffectDuration!==null&&(<liclassName={styles.DurationsListItem}><labelclassName={styles.Label}>Passiveeffects</label>:{''}<spanclassName={styles.Value}>{formatDuration(passiveEffectDuration)}ms</span></li>)}</ul></li>)}{updaters!==null&&commitTree!==null&&(<liclassName={styles.ListItem}><labelclassName={styles.Label}>Whatcausedthisupdate</label>?<UpdaterscommitTree={commitTree}updaters={updaters}/></li>)}</ul></div></Fragment>);}
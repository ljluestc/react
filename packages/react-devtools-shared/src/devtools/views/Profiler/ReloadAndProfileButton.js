/***Copyright(c)MetaPlatforms,Inc.andaffiliates.**ThissourcecodeislicensedundertheMITlicensefoundinthe*LICENSEfileintherootdirectoryofthissourcetree.**@flow*/import*asReactfrom'react';import{useCallback,useContext,useMemo}from'react';importButtonfrom'../Button';importButtonIconfrom'../ButtonIcon';import{BridgeContext,StoreContext}from'../context';import{useSubscription}from'../hooks';typeSubscriptionData={recordChangeDescriptions:boolean,supportsReloadAndProfile:boolean,};exportdefaultfunctionReloadAndProfileButton({disabled,}:{disabled:boolean,}):React.Node{constbridge=useContext(BridgeContext);conststore=useContext(StoreContext);constsubscription=useMemo(()=>({getCurrentValue:()=>({recordChangeDescriptions:store.recordChangeDescriptions,supportsReloadAndProfile:store.supportsReloadAndProfile,}),subscribe:(callback:Function)=>{store.addListener('recordChangeDescriptions',callback);store.addListener('supportsReloadAndProfile',callback);return()=>{store.removeListener('recordChangeDescriptions',callback);store.removeListener('supportsReloadAndProfile',callback);};},}),[store],);const{recordChangeDescriptions,supportsReloadAndProfile}=useSubscription<SubscriptionData>(subscription);constreloadAndProfile=useCallback(()=>{//TODOIfwewanttosupportreload-and-profilefore.g.ReactNative,//wemightneedtoalsostartprofilingherebeforereloadingtheapp(sinceDevToolsitselfisn'treloaded).//We'dprobablywanttodothisbeforereloadingthough,toavoidsendingamessageonadisconnectedportinthebrowser.//Fornow,let'sjustskipdoingitentirelytoavoidpayingsnapshotcostsfordatawedon'tneed.//startProfiling();bridge.send('reloadAndProfile',recordChangeDescriptions);},[bridge,recordChangeDescriptions]);if(!supportsReloadAndProfile){returnnull;}return(<Buttondisabled={disabled}onClick={reloadAndProfile}title="Reloadandstartprofiling"><ButtonIcontype="reload"/></Button>);}
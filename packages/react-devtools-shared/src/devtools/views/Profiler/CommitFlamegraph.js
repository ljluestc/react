/***Copyright(c)MetaPlatforms,Inc.andaffiliates.**ThissourcecodeislicensedundertheMITlicensefoundinthe*LICENSEfileintherootdirectoryofthissourcetree.**@flow*/import*asReactfrom'react';import{forwardRef,useCallback,useContext,useMemo,useState}from'react';importAutoSizerfrom'react-virtualized-auto-sizer';import{FixedSizeList}from'react-window';import{ProfilerContext}from'./ProfilerContext';importNoCommitDatafrom'./NoCommitData';importCommitFlamegraphListItemfrom'./CommitFlamegraphListItem';importHoveredFiberInfofrom'./HoveredFiberInfo';import{scale}from'./utils';import{useHighlightNativeElement}from'../hooks';import{StoreContext}from'../context';import{SettingsContext}from'../Settings/SettingsContext';importTooltipfrom'./Tooltip';importstylesfrom'./CommitFlamegraph.css';importtype{TooltipFiberData}from'./HoveredFiberInfo';importtype{ChartData,ChartNode}from'./FlamegraphChartBuilder';importtype{CommitTree}from'./types';exporttypeItemData={chartData:ChartData,onElementMouseEnter:(fiberData:TooltipFiberData)=>void,onElementMouseLeave:()=>void,scaleX:(value:number,fallbackValue:number)=>number,selectedChartNode:ChartNode|null,selectedChartNodeIndex:number,selectFiber:(id:number|null,name:string|null)=>void,width:number,};exportdefaultfunctionCommitFlamegraphAutoSizer(_:{}):React.Node{const{profilerStore}=useContext(StoreContext);const{rootID,selectedCommitIndex,selectFiber}=useContext(ProfilerContext);const{profilingCache}=profilerStore;constdeselectCurrentFiber=useCallback((event:$FlowFixMe)=>{event.stopPropagation();selectFiber(null,null);},[selectFiber],);letcommitTree:CommitTree|null=null;letchartData:ChartData|null=null;if(selectedCommitIndex!==null){commitTree=profilingCache.getCommitTree({commitIndex:selectedCommitIndex,rootID:((rootID:any):number),});chartData=profilingCache.getFlamegraphChartData({commitIndex:selectedCommitIndex,commitTree,rootID:((rootID:any):number),});}if(commitTree!=null&&chartData!=null&&chartData.depth>0){return(<divclassName={styles.Container}onClick={deselectCurrentFiber}><AutoSizer>{({height,width})=>(//ForceFlowtypestoavoidcheckingfor`null`herebecausethere'snostaticproofthat//bythetimethisrenderpropfunctioniscalled,thevaluesofthe`let`variableshavenotchanged.<CommitFlamegraphchartData={((chartData:any):ChartData)}commitTree={((commitTree:any):CommitTree)}height={height}width={width}/>)}</AutoSizer></div>);}else{return<NoCommitData/>;}}typeProps={chartData:ChartData,commitTree:CommitTree,height:number,width:number,};functionCommitFlamegraph({chartData,commitTree,height,width}:Props){const[hoveredFiberData,setHoveredFiberData]=useState<TooltipFiberData|null>(null);const{lineHeight}=useContext(SettingsContext);const{selectFiber,selectedFiberID}=useContext(ProfilerContext);const{highlightNativeElement,clearHighlightNativeElement}=useHighlightNativeElement();constselectedChartNodeIndex=useMemo<number>(()=>{if(selectedFiberID===null){return0;}//Theselectednodemightnotbeinthetreeforthiscommit,//soit'simportantthatwehaveafallbackplan.constdepth=chartData.idToDepthMap.get(selectedFiberID);returndepth!==undefined?depth-1:0;},[chartData,selectedFiberID]);constselectedChartNode=useMemo(()=>{if(selectedFiberID!==null){return(chartData.rows[selectedChartNodeIndex].find(chartNode=>chartNode.id===selectedFiberID,)||null);}returnnull;},[chartData,selectedFiberID,selectedChartNodeIndex]);consthandleElementMouseEnter=useCallback(({id,name}:$FlowFixMe)=>{highlightNativeElement(id);//Highlightlasthoveredelement.setHoveredFiberData({id,name});//Sethoveredfiberdatafortooltip},[highlightNativeElement],);consthandleElementMouseLeave=useCallback(()=>{clearHighlightNativeElement();//clearhighlightingofelementonmouseleavesetHoveredFiberData(null);//clearhoveredfiberdatafortooltip},[clearHighlightNativeElement]);constitemData=useMemo<ItemData>(()=>({chartData,onElementMouseEnter:handleElementMouseEnter,onElementMouseLeave:handleElementMouseLeave,scaleX:scale(0,selectedChartNode!==null?selectedChartNode.treeBaseDuration:chartData.baseDuration,0,width,),selectedChartNode,selectedChartNodeIndex,selectFiber,width,}),[chartData,handleElementMouseEnter,handleElementMouseLeave,selectedChartNode,selectedChartNodeIndex,selectFiber,width,],);//TooltipusedtoshowsummaryoffiberinfoonhoverconsttooltipLabel=useMemo(()=>hoveredFiberData!==null?(<HoveredFiberInfofiberData={hoveredFiberData}/>):null,[hoveredFiberData],);return(<Tooltiplabel={tooltipLabel}><FixedSizeListheight={height}innerElementType={InnerElementType}itemCount={chartData.depth}itemData={itemData}itemSize={lineHeight}width={width}>{CommitFlamegraphListItem}</FixedSizeList></Tooltip>);}constInnerElementType=forwardRef(({children,...rest},ref)=>(<svgref={ref}{...rest}><defs><patternid="didNotRenderPattern"patternUnits="userSpaceOnUse"width="4"height="4"><pathd="M-1,1l2,-2M0,4l4,-4M3,5l2,-2"className={styles.PatternPath}/></pattern></defs>{children}</svg>));
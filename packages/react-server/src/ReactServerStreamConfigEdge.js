/***Copyright(c)MetaPlatforms,Inc.andaffiliates.**ThissourcecodeislicensedundertheMITlicensefoundinthe*LICENSEfileintherootdirectoryofthissourcetree.**@flow*/exporttypeDestination=ReadableStreamController;exporttypePrecomputedChunk=Uint8Array;exportopaquetypeChunk=Uint8Array;exporttypeBinaryChunk=Uint8Array;exportfunctionscheduleWork(callback:()=>void){setTimeout(callback,0);}exportfunctionflushBuffered(destination:Destination){//WHATWGStreamsdonotyethaveawaytoflushtheunderlying//transformstreams.https://github.com/whatwg/streams/issues/960}constVIEW_SIZE=512;letcurrentView=null;letwrittenBytes=0;exportfunctionbeginWriting(destination:Destination){currentView=newUint8Array(VIEW_SIZE);writtenBytes=0;}exportfunctionwriteChunk(destination:Destination,chunk:PrecomputedChunk|Chunk|BinaryChunk,):void{if(chunk.byteLength===0){return;}if(chunk.byteLength>VIEW_SIZE){if(__DEV__){if(precomputedChunkSet.has(chunk)){console.error('AlargeprecomputedchunkwaspassedtowriteChunkwithoutbeingcopied.'+'Largechunksgetenqueueddirectlyandarenotcopied.Thisisincompatiblewithprecomputedchunksbecauseyoucannotenqueuethesameprecomputedchunktwice.'+'Use"cloneChunk"tomakeacopyofthislargeprecomputedchunkbeforewritingit.ThisisabuginReact.',);}}//thischunkmayoverflowasingleviewwhichimpliesitwasnot//onethatiscachedbythestreamingrenderer.Wewillenqueu//itdirectlyandexpectitisnotre-usedif(writtenBytes>0){destination.enqueue(newUint8Array(((currentView:any):Uint8Array).buffer,0,writtenBytes,),);currentView=newUint8Array(VIEW_SIZE);writtenBytes=0;}destination.enqueue(chunk);return;}letbytesToWrite=chunk;constallowableBytes=((currentView:any):Uint8Array).length-writtenBytes;if(allowableBytes<bytesToWrite.byteLength){//thischunkwouldoverflowthecurrentview.Weenqueueafullview//andstartanewviewwiththeremainingchunkif(allowableBytes===0){//thecurrentviewisalreadyfull,senditdestination.enqueue(currentView);}else{//fillupthecurrentviewandapplytheremainingchunkbytes//toanewview.((currentView:any):Uint8Array).set(bytesToWrite.subarray(0,allowableBytes),writtenBytes,);//writtenBytes+=allowableBytes;//thiscanbeskippedbecausewearegoingtoimmediatelyresettheviewdestination.enqueue(currentView);bytesToWrite=bytesToWrite.subarray(allowableBytes);}currentView=newUint8Array(VIEW_SIZE);writtenBytes=0;}((currentView:any):Uint8Array).set(bytesToWrite,writtenBytes);writtenBytes+=bytesToWrite.byteLength;}exportfunctionwriteChunkAndReturn(destination:Destination,chunk:PrecomputedChunk|Chunk|BinaryChunk,):boolean{writeChunk(destination,chunk);//inwebstreamsthereisnobackpressuresowecanalwaswritemorereturntrue;}exportfunctioncompleteWriting(destination:Destination){if(currentView&&writtenBytes>0){destination.enqueue(newUint8Array(currentView.buffer,0,writtenBytes));currentView=null;writtenBytes=0;}}exportfunctionclose(destination:Destination){destination.close();}consttextEncoder=newTextEncoder();exportfunctionstringToChunk(content:string):Chunk{returntextEncoder.encode(content);}constprecomputedChunkSet:Set<Chunk|BinaryChunk>=__DEV__?newSet():(null:any);exportfunctionstringToPrecomputedChunk(content:string):PrecomputedChunk{constprecomputedChunk=textEncoder.encode(content);if(__DEV__){precomputedChunkSet.add(precomputedChunk);}returnprecomputedChunk;}exportfunctiontypedArrayToBinaryChunk(content:$ArrayBufferView,):BinaryChunk{//Convertanynon-Uint8ArrayarraytoUint8Array.WecouldavoidthisforUint8Arrays.//Ifwepassedthroughthisstraighttoenqueuewewouldn'thavetoconvertitbutsince//weneedtocopythebufferinthatcase,weneedtoconvertittocopyit.//Whenwecopyitintoanotherarrayusingset()itneedstobeaUint8Array.constbuffer=newUint8Array(content.buffer,content.byteOffset,content.byteLength,);//Weclonelargechunkssothatwecantransferthemwhenwewritethem.//Othersgetcopiedintothetargetbuffer.returncontent.byteLength>VIEW_SIZE?buffer.slice():buffer;}exportfunctionclonePrecomputedChunk(precomputedChunk:PrecomputedChunk,):PrecomputedChunk{returnprecomputedChunk.byteLength>VIEW_SIZE?precomputedChunk.slice():precomputedChunk;}exportfunctionbyteLengthOfChunk(chunk:Chunk|PrecomputedChunk):number{returnchunk.byteLength;}exportfunctionbyteLengthOfBinaryChunk(chunk:BinaryChunk):number{returnchunk.byteLength;}exportfunctioncloseWithError(destination:Destination,error:mixed):void{//$FlowFixMe[method-unbinding]if(typeofdestination.error==='function'){//$FlowFixMe[incompatible-call]:ThisisanErrorobjectorthedestinationacceptsothertypes.destination.error(error);}else{//Earlierimplementationsdoesn'tsupportthismethod.Inthatenvironmentyou're//supposedtothrowfromapromisereturnedbutwedon'treturnapromiseinour//approach.Wecouldforkthisimplementationbutthisisenvironmentisanedge//casetobeginwith.It'sevenlesscommontorunthisinanolderenvironment.//Eventhen,thisisnotwhereerrorsaresupposedtohappenandtheygetreported//toaglobalcallbackinadditiontothisanyway.Soit'sfinejusttoclosethis.destination.close();}}
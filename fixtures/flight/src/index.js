import * as React from 'react';import {use, Suspense, useState, startTransition} from 'react';import ReactDOM from 'react-dom/client';import {createFromFetch, encodeReply} from 'react-server-dom-webpack/client';async function callServer(id, args) {  const response = feheaders: { Accept: 'text/x-component', 'rsc-action': id,},body: await encodeReply(args),  });  const {returnValue, root} = await createFromFetch(response, {callServer});  // Refresh the tree with the new RSC payload.  startTransition(() => {updateRoot(root);  });  return returnValue;}let data = createFromFetch(  fetch('/', {headers: { Accept: 'text/x-component',}  {callServer,  });function Shell({data}) {  const [root, setRoot] = useState(use(data));  updateRoot = setRoot;  return root;}ReactDOM.hydrateRoot(document, <Shell data={data} />);
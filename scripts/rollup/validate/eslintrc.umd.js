'use strict';module.exports = {  env: {browser: true,  },  globals: {// ES6BigInt: 'readonly',Map: 'readonly',Set: 'readonly',Symbol: 'readonly',Proxy: 'readonly',WeakMap: 'readonly',WeakSet: 'readonly',Int8Array: 'readonly',Uint8Array: 'readonly',Uint8ClampedArray: 'readonly',Int16Array: 'readonly',Uint16Array: 'readonly',Int32Array: 'readonly',Uint32Array: 'readonly',Float32Array: 'readonly',Float64Array: 'readonly',BigInt64Array: 'readonly',BigUint64Array: 'readonly',DataView: 'readonly',ArrayBuffer: 'readonly',Reflect: 'readonly',globalThis: 'readonly',// Vendor specificMSApp: 'readonly',__REACT_DEVTOOLS_GLOBAL_HOOK__: 'readonly',// UMD wrapper code// TODO: this is too permissive.// Ideally we should only allow these *inside* the UMD wrapper.exports: 'readonly',module: 'readonly',define: 'readonly',require: 'readonly',global: 'readonly',// Internet ExplorersetImmediate: 'readonly',// Trusted TypestrustedTypes: 'readonly',// Scheduler profilingTaskController: 'readonly',reportError: 'readonly',AggregateError: 'readonly',// FlightPromise: 'readonly',// TempAsyncLocalStorage: 'readonly',// Flight Webpack__webpack_chunk_load__: 'readonly',__webpack_require__: 'readonly',// jestjest: 'readonly',// actIS_REACT_ACT_ENVIRONMENT: 'readonly',  },  parserOptions: {ecmaVersion: 5,sourceType: 'script',  },  rules: {'no-undef': 'error','no-shadow-restricted-names': 'error',  },  // These plugins aren't used, but eslint complains if an eslint-ignore comment  // references unused plugins. An alternate approach could be to strip  // eslint-ignore comments as part of the build.  plugins: ['ft-flow', 'jest', 'no-for-of-loops', 'react', 'react-internal'],};